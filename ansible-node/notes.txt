controller
===========
https://wiki.alpinelinux.org/wiki/Ansible
apk add ansible -

apk add openssh-keygen -
apk add vim -
apk add openssh -
apk add openrc -
rc-update add sshd -

ssh-keygen -t rsa

sshd start

apk add openssh-client
apk add openssh-server
apk add sshpass

///
nodes
=========
apk add vim -
apk add python3 ?
apk add openssh-server ?

apk add openssh-keygen ?

apk add openssh ? maybe openssh-server



docker run -p 22 -it --name u1 --network test controller:Dockerfile
docker run -p 22 -it --name u3 --network test node:latest


=FINAL THIS IS USING DOCKER [NOT VM]=

docker network create -d bridge CS312LAN
docker pull victorcampa/f_controller
docker pull victorcampa/f_node

docker run -p 22 -it --rm --name u1 --network CS312LAN victorcampa/f_controller:latest
docker run -p 22 -it --rm --name u2 --network CS312LAN victorcampa/f_node:latest
[ON u1 = CONTROLLER] change the ip on hosts.ini to the name you apply to the node (in this case u2)
[ON u2 = NODE] run the command "service sshd restart"
[ON u1 = CONTROLLER] run "ansible mynodes -i ~/hosts.ini -m ping" which SHOULD ping back
[ON u1 = CONTROLLER] "ansible-playbook ~/webserver.yaml -i ~/hosts.ini" (note I modified the playbook in order to get apache2 working on docker)
[on u1 = CONTROLLER] run "curl u2" or whatever name you gave to the container

(NOTE: if you would like to see the history of the commands I use to get this running type "history" for either u1 or u2)